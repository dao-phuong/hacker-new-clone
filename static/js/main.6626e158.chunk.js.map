{"version":3,"sources":["services/Api.js","services/hackerNewsApi.js","store/story/actions.js","store/story/selector.js","styles/pallete.js","utils/getSiteHostName.js","utils/getArticleLink.js","components/ListItem/styles.js","components/ListItem/index.js","components/List/styles.js","components/List/index.js","components/Loader/style.js","components/Loader/index.js","components/App/styles.js","styles/mediaQueries.js","components/App/App.js","components/App/index.js","styles/global.js","store/app/actions.js","store/app/reducer.js","store/story/reducer.js","store/reducer.js","store/middleware.js","store/index.js","serviceWorker.js","index.js"],"names":["API_ROOT","process","URL","TIMEOUT","HEADERS","Accept","client","baseURL","timeout","headers","auth","axios","create","interceptors","response","use","this","handleSuccess","handleError","error","Promise","reject","path","get","then","data","payload","post","put","patch","delete","hackerNewsApi","getTopStoryIds","getStory","id","getStoriesByPage","ids","page","limit","begin","end","getPageSlice","storyPromise","items","slice","getPageValues","map","all","NS","actionTypes","FETCH_STORY_IDS_REQUEST","FETCH_STORY_IDS_SUCCESS","FETCH_STORY_IDS_FAILURE","FETCH_STORIES_REQUEST","FETCH_STORIES_SUCCESS","FETCH_STORIES_FAILURE","action","type","actions","fetchStoryIds","dispatch","storyIds","fetchStories","catch","err","stories","hasMoreStoriesSelector","createSelector","state","story","length","colorsDark","background","backgroundSecondary","text","textSecondary","border","getSiteHostname","siteUrl","hostname","includes","url","parse","split","HN_ROOT","HN_ITEM","HN_USER","getArticleLink","commentUrl","Item","styled","li","theme","Title","h3","Host","span","ExternalLink","a","Description","div","CommentLink","LINK_REL","ListItem","by","kids","score","title","time","site","getSiteHostName","link","userUrl","href","rel","target","format","Date","toISOString","ListWrapper","ul","props","List","key","blink","keyframes","Animation","Loader","Wrapper","h1","App","isFetching","fetchStoriesFirstPage","hasMoreStories","dataLength","next","hasMore","loader","style","height","overflow","React","Component","connect","GlobalStyles","createGlobalStyle","SET_THEME","initalState","app","rootReducer","combineReducers","middlewareList","push","thunk","middleware","compose","applyMiddleware","configureStore","initialState","createStore","reducer","Boolean","window","location","match","store","ReactDOM","render","document","getElementById","renderApp","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6626e158.chunk.js","sourcesContent":["import axios from 'axios';\n\n// Default API will be your root\nconst API_ROOT = process.env.URL || 'http://localhost:3000/';\nconst TIMEOUT = 20000;\nconst HEADERS = {\n  'Content-Type': 'application/json',\n  Accept: 'application/json',\n};\n\nclass ApiService {\n  constructor({ baseURL = API_ROOT, timeout = TIMEOUT, headers = HEADERS, auth }) {\n    const client = axios.create({\n      baseURL,\n      timeout,\n      headers,\n      auth,\n    });\n\n    client.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.client = client;\n  }\n\n  handleSuccess(response) {\n    return response;\n  }\n\n  handleError(error) {\n    return Promise.reject(error);\n  }\n\n  get(path) {\n    return this.client.get(path).then(response => response.data);\n  }\n\n  post(path, payload) {\n    return this.client.post(path, payload).then(response => response.data);\n  }\n\n  put(path, payload) {\n    return this.client.put(path, payload).then(response => response.data);\n  }\n\n  patch(path, payload) {\n    return this.client.patch(path, payload).then(response => response.data);\n  }\n\n  delete(path) {\n    return this.client.delete(path).then(response => response.data);\n  }\n}\n\nexport default ApiService;","import ApiService from './Api';\n\nconst BASE_URL = \" https://hacker-news.firebaseio.com/v0\";\nconst client = new ApiService({ baseURL: BASE_URL });\nconst JSON_QUERY = '.json?print=pretty';\n\nconst PAGE_LIMIT = 20;\nlet hackerNewsApi = {};\n\nconst getPageSlice = (limit, page = 0) => ({\n  begin: page * limit,\n  end: (page + 1) * limit\n});\n\nconst getPageValues = ({ begin, end, items }) => {\n  return items.slice(begin, end);\n}\n\nhackerNewsApi.getTopStoryIds = () => client.get(`/topstories${JSON_QUERY}`);\nhackerNewsApi.getStory = (id) => client.get(`/item/${id}${JSON_QUERY}`);\nhackerNewsApi.getStoriesByPage = (ids, page) => {\n  const { begin, end } = getPageSlice(PAGE_LIMIT, page);\n  const activeIds = getPageValues({ begin, end, items: ids });\n  const storyPromise = activeIds.map(id => hackerNewsApi.getStory(id));\n  return Promise.all(storyPromise);\n}\n\nexport default hackerNewsApi;","import hackerNewsApi from 'services/hackerNewsApi';\n\nconst NS = '@hnClone/story';\n\nexport const actionTypes = {\n  FETCH_STORY_IDS_REQUEST: `${NS}/FETCH_STORY_IDS_REQUEST`,\n  FETCH_STORY_IDS_SUCCESS: `${NS}/FETCH_STORY_IDS_SUCCESS`,\n  FETCH_STORY_IDS_FAILURE: `${NS}/FETCH_STORY_IDS_FAILURE`,\n  FETCH_STORIES_REQUEST: `${NS}/FETCH_STORIES_REQUEST`,\n  FETCH_STORIES_SUCCESS: `${NS}/FETCH_STORIES_SUCCESS`,\n  FETCH_STORIES_FAILURE: `${NS}/FETCH_STORIES_FAILURE`,\n};\n\nconst action = (type, payload) => ({ type, payload});\n\nconst actions = {\n  fetchStoryIds: (payload={}) => {\n    return dispatch => {\n      dispatch(action(actionTypes.FETCH_STORY_IDS_REQUEST, payload));\n\n      return hackerNewsApi.getTopStoryIds()\n        .then(storyIds => {\n          dispatch(action(actionTypes.FETCH_STORY_IDS_SUCCESS, { storyIds }));\n          dispatch(actions.fetchStories({ storyIds, page: 0 }));\n          return storyIds;\n        })\n        .catch(err => dispatch(action(actionTypes.FETCH_STORY_IDS_FAILURE, err)));\n    }\n  },\n  fetchStories: (payload = {}) => {\n    return dispatch => {\n      dispatch(action(actionTypes.FETCH_STORIES_REQUEST, payload));\n      const { storyIds, page } = payload;\n\n      return hackerNewsApi.getStoriesByPage(storyIds, page)\n        .then(stories => dispatch(action(actionTypes.FETCH_STORIES_SUCCESS, { stories })))\n        .catch(err => dispatch(action(actionTypes.FETCH_STORIES_FAILURE, err)));\n    }\n  }\n};\n\nexport default actions;","import { createSelector } from 'reselect';\n\nconst storyIdsSelector = state => state.story.storyIds;\nconst storiesSelector = state => state.story.stories;\n\nexport const hasMoreStoriesSelector = createSelector(\n  storyIdsSelector,\n  storiesSelector,\n  (storyIds, stories) => storyIds.length > stories.length,\n);","export const colorsDark = {\n  background: '#272727',\n  backgroundSecondary: '#393C3E',\n  text: '#bfbebe',\n  textSecondary: '#848886',\n  border: '#272727',\n};\n\nexport const colorsLight = {\n  background: '#EAEAEA',\n  backgroundSecondary: '#F8F8F8',\n  text: '#848886',\n  textSecondary: '#aaaaaa',\n  border: '#EAEAEA',\n};","import url from 'url';\n\nconst getSiteHostname = siteUrl => {\n  let hostname = '';\n\n  if (siteUrl) {\n    if (!siteUrl.includes('//')) {\n      siteUrl = `http://${siteUrl}`;\n    }\n\n    hostname = url.parse(siteUrl).hostname;\n  }\n\n  if (hostname.includes('www.')) {\n    hostname = hostname.split('www.')[1];\n  }\n\n  return hostname;\n};\n\nexport default getSiteHostname;\n","const HN_ROOT = 'https://news.ycombinator.com';\nexport const HN_ITEM = `${HN_ROOT}/item?id=`;\nexport const HN_USER = `${HN_ROOT}/user?id=`;\n\nconst getArticleLink = ({ url, id }) => {\n  const commentUrl = `${HN_ITEM}${id}`;\n  const link = !!url ? url : commentUrl;\n  return link;\n};\n\nexport default getArticleLink;","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  padding: 20px;\n  border-bottom: 2px solid ${({theme}) => theme.border}\n\n  &:last-child {\n    border-bottom: 0:\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const Title = styled.h3`\n  color: ${({ theme }) => theme.text};\n  margin-top: 0;\n  margin-bottom: 6px;\n  font-weight: 500;\n  font-size: 16px;\n  letter-spacing: .4px;\n`;\n\nexport const Host = styled.span`\n  color: ${({ theme }) => theme.text };\n  font-size: 12px;\n`;\n\nexport const ExternalLink = styled.a`\n  color: ${({ theme }) => theme.text };\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-item: center;\n  text-decoration: none;\n`;\n\nexport const Description = styled.div`\n  font-size: 14px;\n  color: ${({theme}) => theme.textSecondary };\n`;\n\nexport const CommentLink = styled.a`\n  color: ${({ theme }) => theme.textSecondary };\n\n  &:visited {\n    color: ${({ theme }) => theme.textSecondary }\n  }\n`;","import React from 'react';\nimport { format } from 'timeago.js';\nimport getSiteHostName from 'utils/getSiteHostName';\nimport getArticleLink, { HN_USER, HN_ITEM } from 'utils/getArticleLink';\n\nimport { Item, Title, Host, ExternalLink, Description, CommentLink } from './styles';\n\nconst LINK_REL = 'noopener noreferrer nofollow';\n\nconst ListItem = ({ by, kids = [], score, title, id, time, url }) => {\n  const site = getSiteHostName(url) || 'localhost';\n  const link = getArticleLink({ url, id });\n  const commentUrl = `${HN_ITEM}${id}`;\n  const userUrl = `${HN_USER}${by}`;\n\n  return (\n    <Item>\n      <ExternalLink href={link} rel={LINK_REL} target='_blank'>\n        <Title>{ title + ' ' }<Host>({ site })</Host></Title>\n      </ExternalLink>\n      <Description>\n        { score } points by {' '}\n        <CommentLink href={userUrl} rel={LINK_REL} target='_blank'>\n          { by }\n        </CommentLink>\n        { format(new Date(time * 1000).toISOString()) }{' | '}\n        <CommentLink href={commentUrl} rel={LINK_REL} target='_blank'>\n          { kids.length } Comments\n        </CommentLink>\n      </Description>\n    </Item>\n  );\n}\n\nexport default ListItem;","import styled from 'styled-components';\n\nexport const ListWrapper = styled.ul`\n  background-color: ${props => props.theme.backgroundSecondary}\n  border-radius: 4px;\n  margin: 0 auto 20px;\n  display: flex;\n  flex-direction: column\n`;","import React from 'react';\nimport ListItem from 'components/ListItem';\n\nimport { ListWrapper } from './styles';\n\nconst List = ({ stories }) => (\n  <ListWrapper>\n    {\n      stories.map(story => <ListItem key={story.id} {...story} />)\n    }\n  </ListWrapper>\n);\n\nexport default List;","import styled, { keyframes } from 'styled-components';\n\nconst blink = keyframes`\n  0% {\n    opacity: .2;\n  }\n\n  20% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: .2;\n  }\n`;\n\nexport const Animation = styled.div`\n  text-align: center;\n\n  span {\n    color: ${({ theme }) => theme.textSecondary}\n    display: inline-block;\n    margin: 0 4px;\n    font-size: 80px;\n    line-height: 0.1;\n    animation-name: ${blink};\n    animation-duration: 1s;\n    animation-interaction-count: infinite;\n    animation-fill-mode: both;\n  }\n\n  span:nth-child(2) {\n    animation-delay: .2s;\n  }\n\n  span:nth-child(3) {\n    animation-delay: .4s;\n  }\n`;","import React from 'react';\n\nimport { Animation } from './style';\n\nconst Loader = () => (\n  <Animation>\n    <span>.</span>\n    <span>.</span>\n    <span>.</span>\n  </Animation>\n);\n\nexport default Loader;","import styled from 'styled-components';\nimport { tablet } from 'styles/mediaQueries';\n\nexport const Wrapper = styled.div`\n  width: 85%;\n  margin: 0 auto;\n  height: 100%;\n  overflow: hidden;\n  padding-bottom: 200px;\n\n  ${tablet} {\n    width: 96%;\n  }\n\n`;\n\nexport const Title = styled.h1`\n  color: ${props => props.theme.textSecondary}\n  font-size: 20px;\n  font-weight: 300;\n  margin-top: 24px;\n  margin-bottom: 26px;\n`;\n","export const mobile = '@media only sceen and (max-width: 480px)';\nexport const tablet = '@media only sceen and (max-width: 768px)';","import React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { ThemeProvider } from 'styled-components';\nimport { colorsDark } from 'styles/pallete';\n\nimport List from 'components/List';\nimport Loader from 'components/Loader';\nimport { Wrapper, Title } from './styles';\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchStoriesFirstPage();\n  }\n\n  fetchStories = () => {\n    const { storyIds, page, fetchStories, isFetching } = this.props;\n    if (!isFetching) {\n      fetchStories({ storyIds, page });\n    }\n  }\n\n  render() {\n    const { stories, hasMoreStories } = this.props;\n\n    return (\n      <ThemeProvider theme={colorsDark} >\n        <div>\n          <Wrapper>\n            <Title>Hacker News Reader</Title>\n            <InfiniteScroll\n              dataLength={stories.length}\n              next={this.fetchStories}\n              hasMore={hasMoreStories}\n              loader={<Loader />}\n              style={{\n                height: '100%',\n                overflow: 'visible'\n              }}\n            >\n              <List stories={stories} />\n            </InfiniteScroll>\n          </Wrapper>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport actions from 'store/story/actions';\nimport { hasMoreStoriesSelector } from 'store/story/selector';\nimport App from './App';\n\nconst mapStateToProps = (state) => ({\n  stories: state.story.stories,\n  page: state.story.page,\n  storyIds: state.story.storyIds,\n  isFetching: state.story.isFetching,\n  hasMoreStories: hasMoreStoriesSelector(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchStoriesFirstPage: () => dispatch(actions.fetchStoryIds()),\n  fetchStories: ({ storyIds, page }) => dispatch(actions.fetchStories({ storyIds, page })),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { createGlobalStyle } from 'styled-components';\nimport { colorsDark } from './pallete';\n\nconst GlobalStyles = \n  createGlobalStyle`\n    * {\n      box-sizing: border-box;\n    }\n    html, body {\n      font-family: Lato, Helvetica-Neue, Helvetica, Arial, sans-serif;\n      width: 100vw;\n      overflow-x: hidden;\n      margin: 0;\n      padding: 0;\n      min-height: 100vh;\n      background-color: ${colorsDark.background};\n    }\n    ul {\n      list-style: none;\n      padding: 0;\n    }\n    a {\n      text-decoration: none;\n      &:visited {\n        color: inherit;\n      }\n    }\n  `;\n\nexport default GlobalStyles;","const NS = '@hnClone/app';\n\nexport const actionTypes = {\n  SET_THEME: `${NS}/SET_THEME`,\n};\n\nconst actions = {\n  setTheme: (payload = {}) => ({\n    type: actionTypes.SET_THEME,\n    payload\n  })\n}\n\nexport default actions;","import { actionTypes } from './actions';\n\nconst initalState = () => ({\n  theme: 'dark'\n});\n\nconst app = (state = initalState, { type, payload }) => {\n  switch(type) {\n    case actionTypes.SET_THEME:\n      return {\n        ...state,\n        ...payload,  // { theme: <VALUE>}\n      }\n    default:\n      return state;\n  }\n}\n\nexport default app;","import { actionTypes } from './actions';\n\nconst getInitialState = () => ({\n  storyIds: [],\n  stories: [],\n  page: 0,\n  isFetching: false,\n  error: '',\n});\n\nconst story = (state = getInitialState(), { type, payload }) => {\n  switch(type) {\n    case actionTypes.FETCH_STORIES_REQUEST:\n    case actionTypes.FETCH_STORY_IDS_REQUEST:\n      return {\n        ...state,\n        isFetching: true\n      };\n    case actionTypes.FETCH_STORY_IDS_SUCCESS:\n      return {\n        ...state,\n        ...payload,\n      };\n    case actionTypes.FETCH_STORIES_SUCCESS:\n      return {\n        ...state,\n        stories: [\n          ...state.stories, ...payload.stories\n        ],\n        page: state.page + 1,\n        isFetching: false\n      };\n    default:\n      return state;\n  }\n}\n\nexport default story;","import { combineReducers } from 'redux';\nimport app from './app/reducer';\nimport story from './story/reducer';\n\nconst rootReducer = combineReducers({\n  app,\n  story\n});\n\nexport default rootReducer;\n\n","import { applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nconst isProd = process.env.NODE_ENV === 'production';\nconst middlewareList = [];\n\nmiddlewareList.push(thunk);\n\nif (!isProd) {\n  middlewareList.push(createLogger());\n}\n\nconst middleware = compose(applyMiddleware(...middlewareList));\n\nexport default middleware;","import { createStore } from 'redux';\nimport reducer from './reducer';\nimport middleware from './middleware';\n\nconst configureStore = initialState => {\n  const store = createStore(reducer, initialState, middleware);\n  return store;\n}\n\nexport default configureStore;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport GlobalStyle from 'styles/global';\nimport { Provider } from 'react-redux';\nimport configureStore from 'store';\nimport * as serviceWorker from './serviceWorker';\n\nconst renderApp = () => {\n  const initialState = {};\n  const store = configureStore(initialState);\n\n  store.dispatch({\n    type: '@hnClone/@@INIT'\n  });\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n      <GlobalStyle />\n    </Provider>,\n    document.getElementById('root')\n  );\n\n}\n\nrenderApp();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}